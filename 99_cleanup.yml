---
- name: Cleanup playbook
  hosts: vm_host
  vars_files:
    - vars/k8s_cluster.yml
  tasks:
    - ansible.builtin.set_fact:
        home_dir: "{{ ansible_env.HOME }}"

    - name: Destroy cluster VM
      community.general.terraform:
        force_init: true
        project_path: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name }}/{{ item }}"
        state: absent
      loop:
        - workers
        - masters
        - loadbalancer
      when: 
        - not rook_ceph.install_rook
        - k8s.control_plane.vms > 1
      become: true

    - name: Destroy cluster VM
      community.general.terraform:
        force_init: true
        project_path: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name }}/{{ item }}"
        state: absent
      loop:
        - workers
        - masters
      when:
        - not rook_ceph.install_rook
        - k8s.control_plane.vms == 1
      become: true

    - name: Destroy cluster VM
      community.general.terraform:
        force_init: true
        project_path: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name }}/{{ item }}"
        state: absent
      loop:
        - workers-rook
        - workers
        - masters
        - loadbalancer
      when: rook_ceph.install_rook
      become: true

    - name: Destroy libvirt pool and network 
      community.general.terraform:
        force_init: true
        project_path: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name }}/libvirt-resources"
        state: absent
      become: true

    - name: Ensure images are deleted
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/OS-GenericCloud.qcow2
      become: true

    - name: Delete all created paths 
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name }}"
      become: true

    - name: Cleanup local DNS config
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/NetworkManager/dnsmasq.d/{{ k8s.cluster_name }}-libvirt_dnsmasq.conf
        - /etc/NetworkManager/conf.d/{{ k8s.cluster_name }}-localdns.conf
      become: true

    - name: Restart NetworkManager and libvirtd
      ansible.builtin.service:
        name: "{{ item }}"
        state: restarted
      loop:
        - libvirtd
        - NetworkManager
      become: true
